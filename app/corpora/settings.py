"""
Django settings for corpora project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from mongoengine import connect
from huey import PriorityRedisHuey
from neo4j import GraphDatabase
from elasticsearch_dsl import connections

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=4@4^2y04f^c6^q9b7y*3r2n7+hsf+!3ou^m+bzlgk0#h&w=$1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [os.environ['CRP_HOST']]
DEFAULT_USER_USERNAME = os.environ.get('CRP_DEFAULT_USER_USERNAME', 'corpora')
DEFAULT_USER_PASSWORD = os.environ.get('CRP_DEFAULT_USER_PASSWORD', 'corpora')
DEFAULT_USER_FNAME = os.environ.get('CRP_DEFAULT_USER_FNAME', 'Corpora')
DEFAULT_USER_LNAME = os.environ.get('CRP_DEFAULT_USER_LNAME', 'McCorpus')
DEFAULT_USER_EMAIL = os.environ.get('CRP_DEFAULT_USER_EMAIL', 'corpora@{0}'.format(os.environ['CRP_HOST']))

if '.' not in DEFAULT_USER_EMAIL:
    DEFAULT_USER_EMAIL += '.com'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'huey.contrib.djhuey',
    'corsheaders',
    'manager',
    'plugins',
    'plugins.document',
    'plugins.tesseract',
    'plugins.csv',
    #'plugins.google_cloud_vision',
    #'plugins.nlp',
    'plugins.emop',
    'plugins.nvs',
    'plugins.cervantes',
    'plugins.arc',
    'rest_framework',
    'rest_framework.authtoken',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'corpora.urls'

# REDIS CACHING
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://{0}:6379/1".format(os.environ.get('CRP_REDIS_HOST', 'redis')),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        "KEY_PREFIX": "corpora"
    }
}

# CORS CONFIG
CORS_ORIGIN_ALLOW_ALL = True
CORS_URLS_REGEX = r'^/api/.*$'
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            '/corpora'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'corpora.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

MONGO_DB = os.environ['CRP_MONGO_DB']
MONGO_USER = os.environ['CRP_MONGO_USER']
MONGO_PWD = os.environ['CRP_MONGO_PWD']
MONGO_HOST = os.environ['CRP_MONGO_HOST']
MONGO_AUTH_SOURCE = os.environ.get('CRP_MONGO_AUTH_SOURCE', 'admin')
MONGO_POOLSIZE = os.environ['CRP_MONGO_POOLSIZE']

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': MONGO_DB,
        'USER': MONGO_USER,
        'PASSWORD': MONGO_PWD,
        'HOST': MONGO_HOST,
        'AUTH_SOURCE': MONGO_AUTH_SOURCE,
        'AUTH_MECHANISM': 'SCRAM-SHA-1',
    }
}

# Mongoengine connection
connect(
    MONGO_DB,
    host=MONGO_HOST,
    username=MONGO_USER,
    password=MONGO_PWD,
    authentication_source=MONGO_AUTH_SOURCE,
    maxpoolsize=MONGO_POOLSIZE
)

# NEO4J connection
NEO4J = None
try:
    NEO4J = GraphDatabase.driver(
        "bolt://{0}".format(os.environ['CRP_NEO4J_HOST']),
        auth=(os.environ['CRP_NEO4J_USER'], os.environ['CRP_NEO4J_PWD'])
    )
except:
    print("Neo4J database uninitialized.")

# Elasticsearch connection
connections.configure(
    default={'hosts': os.environ['CRP_ELASTIC_HOST'], 'timeout': 60}
)

# eMOP db info
EMOP = {
    'host': os.environ.get('CRP_EMOP_HOST', 'localhost'),
    'db': os.environ.get('CRP_EMOP_DB', 'emop'),
    'user': os.environ.get('CRP_EMOP_USER', 'user'),
    'password': os.environ.get('CRP_EMOP_PWD', 'password')
}

# REST Framework info
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 50
}

# Huey config
HUEY = PriorityRedisHuey('corpora', host='redis')
NUM_HUEY_WORKERS = os.environ.get('CRP_HUEY_WORKERS')

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGIN_URL = '/scholar'
USE_SSL = os.environ['CRP_USE_SSL'] == 'yes'
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTOCOL', 'https')

VALID_IMAGE_EXTENSIONS = ['png', 'jpg', 'jpeg', 'tiff', 'tif']

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_URL = '/static/'
STATIC_ROOT = '/static'